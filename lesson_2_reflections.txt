What happens when you initialize a repository? Why do you need to do it?
The directory receives a hidden file .git that makes it able to be tracked in git.  Without that file, 
git does not recognize the directory and is unable to do anything with it.

How is the staging area different from the working directory and the repository? What value do you think it offers?
It seems that you have files in a working directory.  When you want to move it into your repository, it moves it first
to the staging area, I guess as a way to verify your intention.  When you see it, then you move it.  I am not sure of
the value yet.

How can you use the staging area to make sure you have one commit per logical change?
After staging and diff --staged, I can see what changes I've made, assure that it is logical.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Assume Becca's Set Game.  It would be useful to branch for me to work on an easy mode for her game.  She could branch
to work on a new deck of cards, like Corte's characters or monsters.

How do the diagrams help you visualize the branch structure?
The diagrams clearly show the branch structure.  In the git structure, or log, everything is not clearly shown, some even
not showing up because of the lack of parentage. We can use git log --graph --oneline master easy-mode expert-mode 
to look more visually at the branches.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Two different people are working on two branches of the project.  When they are both ready to put them together, git can
auto merge them. It actually makes one new commit that both go into.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
The major pro of automatic merging is the savings in time.  Git can tell where changes don't conflict and merge them in.
Since git points out conflicts, I can merge knowing that if there is a problem, I can go in and manually make those changes
before that final merge.
What is the con?  Hmmm.  I can, if I want manually merge, by just choosing one file and making all the necesssary changes,
so I can't see a con.  Again, my inexperience is probably the reason there.